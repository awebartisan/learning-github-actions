name: "Learning GitHub Actions CI/CD"

on:
  push:
    branches:
      - "staging"
      - "production"

jobs:
  run-tests-and-deploy:
    name: "Run tests and deploy on Vapor"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Setup PHP 7.4"
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: "Create .env file"
        run: cp .env.example .env

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: vendor
          key: dependencies-composer-${{ hashFiles('composer.lock') }}

      - name: "Install composer dependencies"
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: composer install

      - name: "Generate app key"
        run: php artisan key:generate

      - name: "Run PHPUnit Tests"
        run: ./vendor/bin/phpunit

      - name: "Deploy to Vapor Staging"
        if: github.ref == 'refs/heads/staging'
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
        run: php vendor/bin/vapor deploy staging --message="${{ github.event.head_commit.message }}"

      - name: "Deploy to Vapor Production"
        if: github.ref == 'refs/heads/production'
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
        run: php vendor/bin/vapor deploy production --message="${{ github.event.head_commit.message }}"

      - name: "Get Today Date and Time"
        if: github.ref == 'refs/heads/production'
        id: today
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"

      - name: "Create Release"
        if: github.ref == 'refs/heads/production'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.today.outputs.date }}
          release_name: v${{ steps.today.outputs.date }}
          draft: false
          prerelease: false
